name: Release

on:
  release:
    types: [published]

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.version.outputs.result }}
    steps:
      - id: version
        uses: actions/github-script@c713e510dbd7d213d92d41b7a7805a986f4c5c66 # tag=v6.2.0
        with:
          script: |
            const semver = context.ref.replace('refs/tags/v', '')
            if (semver.match(/^[0-9]+\.[0-9]+\.[0-9]+$/)) {
                return semver
            }
            throw new Error('not semver')
          result-encoding: string

  npm:
    name: Release NPM
    runs-on: ubuntu-latest
    needs: Version
    environment: NPM Release
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version-file: ".nvmrc"
          cache: npm

      - run: npm install --frozen-lockfile

      - run: npm -r exec npm version ${{ needs.version.outputs.result }} --git-tag-version=false

      - run: npm run build

      - run: npm config set "//registry.npmjs.org/:_authToken" "\${NPM_AUTH_TOKEN}" --location=project

      - run: npm -r publish --access public --tag latest --no-git-checks
        env:
          NPM_AUTH_TOKEN: ${{ secrets.WAVESHQ_NPM_TOKEN }}

      - run: npm config delete "//registry.npmjs.org/:_authToken" --location=project
        if: always()